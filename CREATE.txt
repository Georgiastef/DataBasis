#1
CREATE TABLE branch(
br_code INT(11) NOT NULL,
br_street VARCHAR(30) DEFAULT 'unknown' NOT NULL,
br_num INT(4) NOT NULL,
br_city VARCHAR(30) DEFAULT 'unknown' NOT NULL,
PRIMARY KEY(br_code)
);

#2
CREATE TABLE phones(
ph_br_code INT(11) NOT NULL,
ph_number CHAR(10) DEFAULT '0' NOT NULL,
PRIMARY KEY(ph_br_code, ph_number),
CONSTRAINT PHONESBRANCH FOREIGN KEY(ph_br_code) REFERENCES branch(br_code)
ON DELETE CASCADE ON UPDATE CASCADE
);

#3
CREATE TABLE worker(
wrk_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
wrk_name VARCHAR(20) DEFAULT 'unknown' NOT NULL,
wrk_lname VARCHAR(20) DEFAULT 'unknown' NOT NULL,
wrk_salary FLOAT(7,2) NOT NULL,
wrk_br_code INT(11) NOT NULL,
PRIMARY KEY(wrk_AT),
CONSTRAINT WORKERBRANCH FOREIGN KEY(wrk_br_code) REFERENCES branch(br_code)
ON DELETE CASCADE ON UPDATE CASCADE
);

#4
CREATE TABLE admin(
adm_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
adm_type ENUM('LOGISTICS', 'ADMINISTRATIVE', 'ACCOUNTING'),
adm_diploma VARCHAR(200) DEFAULT 'unknown' NOT NULL,
PRIMARY KEY(adm_AT),
CONSTRAINT ADMINWORKER FOREIGN KEY(adm_AT) REFERENCES worker(wrk_AT)
ON DELETE CASCADE ON UPDATE CASCADE
);

#5
CREATE TABLE manages(
mng_adm_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
mng_br_code INT(11) NOT NULL,
PRIMARY KEY(mng_adm_AT, mng_br_code),
CONSTRAINT MANAGESADMIN FOREIGN KEY(mng_adm_AT) REFERENCES admin(adm_AT)
ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT MANAGESBRANCH FOREIGN KEY(mng_br_code) REFERENCES branch(br_code)
ON DELETE CASCADE ON UPDATE CASCADE
);

#6
CREATE TABLE driver(
drv_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
drv_licence ENUM('A', 'B', 'C', 'D'),
drv_route ENUM('LOCAL', 'ABROAD'),
drv_experience TINYINT(4) NOT NULL,
PRIMARY KEY(drv_AT),
CONSTRAINT DRIVERWORKER FOREIGN KEY(drv_AT) REFERENCES worker(wrk_AT)
ON DELETE CASCADE ON UPDATE CASCADE
);

#7
CREATE TABLE guide(
gui_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
gui_cv TEXT NOT NULL,
PRIMARY KEY(gui_AT),
CONSTRAINT GUIDEWORKER FOREIGN KEY(gui_AT) REFERENCES worker(wrk_AT)
ON DELETE CASCADE ON UPDATE CASCADE
);

#8
CREATE TABLE languages(
lng_gui_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
lng_language VARCHAR(10) DEFAULT 'unknown' NOT NULL,
PRIMARY KEY(lng_gui_AT, lng_language),
CONSTRAINT LANGUAGESGUIDE FOREIGN KEY(lng_gui_AT) REFERENCES guide(gui_AT)
ON DELETE CASCADE ON UPDATE CASCADE
);

#9
CREATE TABLE trip(
tr_id INT(11) NOT NULL,
tr_departure DATETIME NOT NULL,
tr_return DATETIME NOT NULL,
tr_maxseats TINYINT(4) NOT NULL,
tr_cost FLOAT(7,2) NOT NULL,
tr_br_code INT(11) NOT NULL,
tr_gui_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
tr_drv_AT CHAR(10) DEFAULT 'unknown' NOT NULL,
PRIMARY KEY(tr_id),
CONSTRAINT TRIPBRANCH FOREIGN KEY(tr_br_code) REFERENCES branch(br_code)
ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT TRIPGUIDE FOREIGN KEY(tr_gui_AT) REFERENCES guide(gui_AT)
ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT TRIPDRIVER FOREIGN KEY(tr_drv_AT) REFERENCES driver(drv_AT)
ON DELETE CASCADE ON UPDATE CASCADE
);

#10
CREATE TABLE event(
ev_tr_id INT(11) NOT NULL,
ev_start DATETIME NOT NULL,
ev_end DATETIME NOT NULL,
ev_descr TEXT NOT NULL,
PRIMARY KEY(ev_tr_id),
CONSTRAINT EVENTTRIP FOREIGN KEY(ev_tr_id) REFERENCES trip(tr_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

#11
CREATE TABLE reservation(
res_tr_id INT(11) NOT NULL,
res_seatnum TINYINT(4) NOT NULL,
res_name VARCHAR(20) DEFAULT 'unknown' NOT NULL,
res_lname VARCHAR(20) DEFAULT 'unknown' NOT NULL,
res_isadult ENUM('ADULT', 'MINOR'),
PRIMARY KEY(res_tr_id),
CONSTRAINT RESERVATIONTRIP FOREIGN KEY(res_tr_id) REFERENCES trip(tr_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

#12
CREATE TABLE destination(
dst_id INT(11) NOT NULL,
dst_name VARCHAR(50) DEFAULT 'unknown' NOT NULL,
dst_descr TEXT NOT NULL,
dst_rtype ENUM('LOCAL', 'ABROAD'),
dst_language VARCHAR(30) DEFAULT 'unknown' NOT NULL,
dst_location INT(11) NOT NULL,
PRIMARY KEY(dst_id),
CONSTRAINT DESTINATION FOREIGN KEY(dst_location) REFERENCES destination(dst_id)
ON DELETE CASCADE ON UPDATE CASCADE
);

#13
CREATE TABLE travel_to(
to_tr_id INT(11) NOT NULL,
to_dst_id INT(11) NOT NULL,
to_arrival DATETIME NOT NULL,
to_departure DATETIME NOT NULL,
PRIMARY KEY(to_tr_id, to_dst_id),
CONSTRAINT TRAVELTOTRIP FOREIGN KEY(to_tr_id) REFERENCES trip(tr_id)
ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT TRAVELTODEST FOREIGN KEY(to_dst_id) REFERENCES destination(dst_id)
ON DELETE CASCADE ON UPDATE CASCADE 
); 